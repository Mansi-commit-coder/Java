__JAVA__
Developed in Sun Microsystem by James Gosling in 1995.

---------Few Points one should keep in mind before starting JAVA---------



a).   ********JVM********
      Java Virtual Machine
     > It acts as a runtime engine to run java application.
     > It converts Java bytecode into machine language.
     > JVM Operations:-- i. Load code
                        ii. Verifies code
                       iii. Executes code
                        iv. Provides runtime environment.
                        

b).   *****bytecode and Machine Code********
____________________________________________________________________________________________________________________________________    
| Feature             | Bytecode                                             | Machine Code                                        |
|---------------------|------------------------------------------------------|-----------------------------------------------------|
| Human Readability   | Generally readable, often resembles high-level code  | Not human-readable, represented in binary, Low-level|
|Platform Independence| Generally platform-independent                       | Tied to a specific architecture                     |
| Execution           | Interpreted by a virtual machine                     | Directly executed by the CPU                        |
| Portability         | More portable                                        | Less portable                                       |
| Size                | Larger file size due to metadata and instructions    |Smaller file size,  it's direct machine instructions |
|_____________________|______________________________________________________|_____________________________________________________|


c). ***********JDK*****************
        Java Development Kit
        It includes everything including compiler, Java Runtime environment, Java Debuggers, Java code etc. 
        For the program to executr in java we need to install JDK on our PC in order to create, Compile and run the java program.

d). ***********JRE***********
     Java Runtime environment

     JDK include JRE. JRE installation on computer allows the java program to run, however we can't compile it. It includes
     a program , a computer needs JRE.


e). ******Garbage Collector*******
      In Java, Programmers cant't delere the objects. To delete or recollect that memory JVM has a program called Garbage collector.
  

f).  *************ClassPath**************
    The classPath is the file path where the java runtime and Java Compiler look for .class files to load. By default, 
    JDK Provides many libraries they should be added the classPath.
    

g). ********APPs/ application**************
    It allows you to perform a set of specific task to solve a particular problem.

*********************Lets Talk about Evolution of programming Language**********************************
--------------------------------------------------------------------------------------------------------
:. 1st generation: Machine Language

:. 2nd generation : Assembly Language
           in this language we were using symbols to solve any problem
           like for addition we are using ADD 
           for substracting SUB.
           to move any file move

:. 3rd generation language : This language are veryclose to English vocabulary
         like c++, java
        > this can be understand by human as well.
        > this is procedual type of language.

:. 4th generation language : This is non-procedual type of language here we only tell computerwhat we required instead of how it can 
                      be done.
                      like : SQL, Python..

:. 5th generation language : they are mainly used in AI.
               Here we are expecting that computer will directly understand human language.
                like: smalltak, Mercury.....


h). *********************Java Applets*******************************
------------------------------------------------------------------

Applets are web program written in java. It is used foe creating dynamic and interactive web application.

i). ***************API*******************
------------------------------------------
Application programming Interface. It is standlone programming environment of java.

> It we run java program in Desktop then this is called application. 
  like : using for simple addition code
> if we run java program in Internet then this is called applet.

j).********* Servlet*************
----------------------------------
Java developed on server is called servlet.
  like: website server side part

k). **********Java Source code*********
Java code file that ends with .java or set of instruction written in java.

l). *************Bytecode*************
An intermediate code generated by compiler after the compilation of source code.

m). *************Object code*****************
    A low level code which is understand by machine. it is generated from source code after going through compiler.

n).********Tokens of Java*************
The basics buiding blocks of a program
ex:   public class Demo{
    public static void main (string arg[]){
        system.out.println("Mansi");
    }
}


public, class, Demo, public, static, void, main, (, string, arg, [,], )......... are tokens 

o). ************Identifiers***********

Identifiers are name that identify elements, such as classes variables and methods in a program.

In java programming terminology, such manes are called identifiers. They are case sensitive, which means that area, Area and AREA are nt same.

p). ****************Literals**********
It is a way to represent boolen, character, numeric or string data.
Integer - Int
Float -f decimals
Character:- 'a','A'
string - "Hi, there"
boolen: true, false.


***********Writing hello world in Java***************

>> class helloworld {: This line declares a class named helloworld. In Java, classes are used as blueprints for creating objects.
 The class name must begin with a capital letter and match the filename. Here, the class name is helloworld.

>>public static void main(String[] arg){: This line declares a method called main. In Java, the main method is the entry point of 
  a Java program. It's where the execution of the program begins.

>>public: This is an access modifier, which means that the main method can be accessed from outside the class.

>>static: This keyword indicates that the main method belongs to the class itself, not to any particular instance of the class.

>>void: This keyword indicates that the main method does not return any value.

>>main: This is the name of the method.

>>(String[] arg): This is the parameter list for the main method. It accepts an array of strings as input. The name of the 
parameter is arg, and it's an array of strings (String[]).

>>{: This curly brace marks the beginning of the main method's body. In Java, curly braces {} are used to define the scope 
of classes, methods, loops, and conditional statements.

>>System.out.println("Hello-world");: This line is a statement that prints "Hello-world" to the console.

System.out is a predefined Java class that represents the standard output stream (i.e., the console).
println is a method of the System.out object used to print a line of text to the console.
"Hello-world" is the string that is printed to the console.

>>}: This curly brace marks the end of the main method's body.

>>}: This curly brace marks the end of the helloworld class definition.




for writing character we use      char ch = sc.next().charAt(0);
for writting any integer we use   int n = sc.nextInt();
writting  decimal value           double a = sc.nextDouble()